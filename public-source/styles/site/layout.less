@import (reference) "./flex-utils.less";

/**
 * Specific Layout
 */

.app-root {
	.full-window;
	.flex-row;
	.flex-children-fill;
}



.main-controls {
	.flex-column;
	.flex-padded;

	flex: 0 1 200px;
}

.main-controls__timing-controls {
	// I'm not exactly sure how this should be handled, but I think this is probably good.
	// Reasoning being that main-controls knows for sure that timing-controls is a certain thing,
	// and that specifically, it has .flex-padded and thus, since .main-controls itself is .flex-padded,
	// it should apply .flex-padded-nested to its specific .timing-controls.
	//
	// Note: If .timing-controls later changes to unpadded (say a .button-group) then this WILL
	// have to be removed.
	//
	// This does mean this is only marginally better than .timing-controls doing it itself.
	//
	// This is one case where it may be potentially less future work to just use blocks and child selectors.
	// That is, .flex-padded is a block, and .flex-padded--nested is a modifier.
	// Then, define .flex-padded > .flex-padded--nested to work in this way,
	// while .flex-padded--nested outside of .flex-padded does nothing.
	// Naming it .flex-padded--collapse might be better.
	.flex-padded-nested;
}



.timing-controls {
	.flex-fixed;

	.flex-row;
	.flex-padded;
}



.animal-selection-controls {
	.flex-grow;

	position: relative;
	overflow: scroll;
}

	.animal-selection-controls--populated {
		.flex-column;
		.flex-children-fill;
	}

.animal-selection-controls__message {
	.flex-column;
	.flex-children-center;

	position: absolute;

	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
}

.animal-selection-controls__panel {
	height: 100%;
	margin: 0;
	overflow-x: hidden;
	overflow-y: scroll;
}

.animal-selection-controls__list {}



.app-image {
	.flex-column;
}



.image-pane {
	.flex-grow;

	flex: 1 1 auto;
}

	.image-pane--idle {
		.flex-row;
		.flex-children-fill;
	}

	.image-pane--running {
		.flex-row;
		.flex-children-fill;
		.flex-padded;
	}

.image-pane__empty-icon {
	.flex-row;
	.flex-children-center;

}

.image-pane__empty-icon-glyphicon {
	font-size: 3em;
}

.image-pane__image {
	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;
}

.image-controls {
	.flex-row;
	.flex-padded;
	.flex-children-fill;
}
